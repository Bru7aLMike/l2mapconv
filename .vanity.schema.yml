settings:
  strict_order: true

types:
  list<T>:
    - T
    - [T]

  map<K, V>: { $K: V }

  inheritance<T>:
    - T
    - public: !optional T
      private: !optional T
      interface: !optional T

  settings:
    options: !optional
      $string:
        description: string
        default: scalar
        definition: !optional string
    variables: !optional { $string: scalar }

  project:
    settings: !embed settings
    type: string
    sources: !optional list<string>
    includes: !optional inheritance<list<string>>
    pchs: !optional inheritance<list<string>>
    dependencies: !optional inheritance<list<string>>
    definitions: !optional
      - inheritance<list<string>>
      - inheritance<map<string, scalar>>
    compile_options: !optional
      - inheritance<list<string>>
      - inheritance<map<string, scalar>>
    properties: !optional
      - inheritance<list<string>>
      - inheritance<map<string, scalar>>

  switch<T>:
    embed: !embed T
    switch: !optional
      - case: string
        embed: !embed T

  template:
    path: string
    subdirectory: !optional string
    remote: !optional
      - string
      - git: string
        branch: !optional string
    patches: !optional list<string>
    overrides: !optional switch<map<string, scalar>>
    project: !optional switch<project>

root:
  name: string
  includes: !optional list<string>
  templates: !optional
    $string: !force-optional template
  settings: !embed switch<settings>
  conditions: !optional
    $string:
      - string
      - { $string: scalar }
  targets:
    $string:
      templates: !optional
        - list<string>
        - list: list<string>
          attributes: { $string: any }
      target: !embed template
